package com.jmk.bjjd.web.controller;

import java.util.Arrays;
import java.util.List;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.jmk.bjjd.enums.Day;
import com.jmk.bjjd.enums.DayNumberInMonth;
import com.jmk.bjjd.models.MemberModel;
import com.jmk.bjjd.models.RoleModel;
import com.jmk.bjjd.models.SevaCategoryModel;
import com.jmk.bjjd.utils.UserUtility;
import com.jmk.bjjd.web.facade.MemberMgmtServiceFacade;
import com.jmk.bjjd.web.facade.SevaCategoryMgmtServiceFacade;
import com.jmk.bjjd.web.validators.MemberModelValidator;

@Controller("memberController")
public class MemberController {
	
	@Autowired
	private SevaCategoryMgmtServiceFacade sevaCategoryMgmtServiceFacade;
	
	@Autowired
	private MemberMgmtServiceFacade memberMgmtServiceFacade;
	
	@Autowired
	private MemberModelValidator sevaModelValidator;
	
	private Logger logger=LoggerFactory.getLogger(MemberController.class);

	
	@RequestMapping("member/editMemberPage/{module}/{mode}")
	public String editMemberPage(@ModelAttribute("memberModel")MemberModel memberModel,@PathVariable("module")String module,@PathVariable("mode")String mode){
		logger.info("Module" + module);
		logger.info("Mode : " + mode);
		return "editMemberPage";
	}
	
	
	@RequestMapping("viewMemberPage")
	public String viewMemberPage(@ModelAttribute("memberModel")MemberModel memberModel){
		return "viewMemberPage";
	}
	
	@ModelAttribute("sevaCategories")
	public List<SevaCategoryModel> sevaCategories(){
		logger.info("UserUtility.getLoggedInUser()" + UserUtility.getLoggedInUser());
		logger.info("UserUtility.getLoggedInUser().getUserModel()" + UserUtility.getLoggedInUser().getUserModel());
		logger.info("UserUtility.getLoggedInUser().getUserModel().getTenantId()" + UserUtility.getLoggedInUser().getUserModel().getTenantId());
		List<SevaCategoryModel> sevaCategories=sevaCategoryMgmtServiceFacade.fetchAllRecords(UserUtility.getLoggedInUser().getUserModel().getTenantId());
		return sevaCategories;
	}
	
	@ModelAttribute("teamLeaders")
	public List<MemberModel> teamLeaders(){
		List<MemberModel> teamLeaders=memberMgmtServiceFacade.findTeamLeadersByTenantId(UserUtility.getLoggedInUser().getUserModel().getTenantId());
		return teamLeaders;
	}
	
	@ModelAttribute("userRoles")
	public List<RoleModel> userRoles(){
		List<RoleModel> userRoles=memberMgmtServiceFacade.findRolesByTenantId(UserUtility.getLoggedInUser().getUserModel().getTenantId());
		return userRoles;
	}
	
	@ModelAttribute("days")
	public List<Day> getDays(){
		List<Day> days=Arrays.asList(Day.values());
		return days;
	}
	
	@ModelAttribute("roles")
	public List<RoleModel> getRoles(){
		return null;
	}
	
	@ModelAttribute("teamLeaders")
	public List<MemberModel> getTeamLeaders(){
		return null;
	}
	
	@ModelAttribute("dayNumbersInMonth")
	public List<DayNumberInMonth> getDayNumbersInTheMonth(){
		List<DayNumberInMonth> dayNumbersInTheMonth=Arrays.asList(DayNumberInMonth.values());
		return dayNumbersInTheMonth;
	}
	
	@RequestMapping(value="/saveMember",method=RequestMethod.POST)
	public String saveMember(@Valid @ModelAttribute("memberModel")MemberModel memberModel,BindingResult result){
		logger.info(memberModel.toString());
		sevaModelValidator.validate(memberModel, result);
		if(result.hasErrors()){
			return "editMemberPage";
		}
		
		return "success";
	}
}
